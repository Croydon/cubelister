AC_INIT([csl], [0.8.2])
AM_INIT_AUTOMAKE([foreign])
AM_SILENT_RULES([yes])
AC_CONFIG_HEADER([src/config.h])

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AC_PROG_CC
AC_DISABLE_STATIC
AM_PROG_LIBTOOL
AC_PROG_INTLTOOL
AC_PROG_RANLIB

DEFAULT_COMPILER_FLAGS=" -fsigned-char -Wall"
CFLAGS+="$DEFAULT_COMPILER_FLAGS"
CXXFLAGS+="$DEFAULT_COMPILER_FLAGS"


GETTEXT_PACKAGE=csl
AC_SUBST(GETTEXT_PACKAGE)
ALL_LINGUAS="cs de nl"

AM_GLIB_GNU_GETTEXT([external])
if test x$MSGFMT = "xno"; then
  AC_ERROR([
The msgfmt command is required to build CSL. If it is installed
on your system, ensure that it is in your search PATH.
If it is not, install GNU gettext.
  ])
fi


dnl check for stuff required by libGeoIP
AC_CHECK_HEADERS(stdint.h)
AC_CHECK_FUNCS([gettimeofday localtime_r socket inet_ntoa])
AC_CHECK_FUNC(gethostbyname_r,[
  AC_EGREP_HEADER(int.*gethostbyname_r,netdb.h,[
    AC_DEFINE([GETHOSTBYNAME_R_RETURNS_INT],[1],[""])
  ])
])


WXCONFIG=wx-config
AC_ARG_WITH(wx-config,AC_HELP_STRING([--with-wx-config=FILE],
                                     [Use the given wx-config script]),
[
  if test "$withval" != "yes" -a "$withval" != ""; then
    WXCONFIG=$withval
  fi
])
version=0
wxtype="unknown"

AC_DEFUN([WXTEST],
[
  AC_REQUIRE([AC_PROG_AWK])
  AC_MSG_CHECKING([wxWidgets version])
  if wxversion=`$WXCONFIG --version`; then
    AC_MSG_RESULT([$wxversion])
  else
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([wxWidgets is required. Try --with-wx-config.])
  fi
])
WXTEST

dnl Check for minimum wx version
vers=`echo $wxversion | $AWK 'BEGIN { FS = "."; } { printf "% d", ($1 * 1000 + $2) * 1000 + $3;}'`
if test -n "$vers" && test "$vers" -ge 2008008; then
  WX_CXXFLAGS=" `$WXCONFIG --cxxflags | sed -e 's/-fno-exceptions//'`"
  dnl WX_LIBS="`$WXCONFIG --libs`"
  WX_LIBS="`$WXCONFIG --libs base,adv,core,net,richtext,qa,xml,html,xml,aui`"
  wxtype=`echo $WX_CXXFLAGS | sed 's/\(.*\)\(ansi\|unicode\)\(.*\)/\2/'`
else
  AC_MSG_ERROR([wxWidgets 2.8.8 or newer is required])
fi
CXXFLAGS+="$WX_CXXFLAGS"
AC_SUBST(WX_LIBS)


dnl speech-dispatcher
use_speechd="yes"
AC_ARG_ENABLE(speechd, AC_HELP_STRING([--disable-speechd],
                                      [disable speech-dispatcher support]),
              use_speechd=$enableval)
if test "x$use_speechd" = "xyes"; then
  PKG_CHECK_MODULES(SPEECHD, speech-dispatcher, [
    AC_DEFINE([HAVE_LIBSPEECHD_08_H], [1], [""])
    CXXFLAGS+=" $SPEECHD_CFLAGS"
  ], [
    AC_CHECK_HEADERS(libspeechd.h, SPEECHD_LIBS="-lspeechd", use_speechd="no")
  ])
fi

dnl libGeoIP
use_internal_geoip="yes"
AC_CHECK_HEADERS(GeoIP.h,AC_CHECK_LIB(GeoIP,GeoIP_new,[use_internal_geoip="no"]))
AM_CONDITIONAL(with_internal_geoip,test "x$use_internal_geoip" = "xyes")

dnl GeoIP database
GEOIPDATADIR=""
use_internal_geoip_db="yes"
AC_ARG_WITH(geoip-datadir,AC_HELP_STRING([--with-geoip-datadir=DIR],
                                         [Use the given path for GeoIP database lookup]),
[
  if test "$withval" != "yes" -a "$withval" != ""; then
    use_internal_geoip_db="no"
    GEOIPDATADIR=$withval
    AC_DEFINE([CSL_EXTERNAL_GEOIP_DATABASE],[1],[use external GeoIP database])
  fi
])
AM_CONDITIONAL(with_internal_geoipdatabase,test "x$use_internal_geoip_db" = "xyes")
AC_DEFINE_UNQUOTED([GEOIPDATADIR],["$GEOIPDATADIR"],[GeoIP database path])


dnl map config tool
cslmapcfgtool=yes
AC_ARG_WITH(cslmapcfgtool,AC_HELP_STRING([--with-cslmapcfgtool],
                                         [build the map config tool]),
            cslmapcfgtool=$withval
)
AM_CONDITIONAL(build_cslmapcfgtool,test "x$cslmapcfgtool" = "xyes")

dnl check, if we have gcc 4.x and can use PCH
AC_MSG_CHECKING([whether to use precompiled headers])
use_pch=""
AC_ARG_ENABLE(pch,AC_HELP_STRING([--enable-pch],[build using precompiled headers]),
              use_pch="$enableval")
if test "x$enable_dependency_tracking" = "xno"; then
  use_pch="no"
fi
if test -z "$use_pch"; then
  if test "X$GCC" = Xyes; then
    if gcc_version=`$CC -dumpversion` > /dev/null 2>&1; then
      major=`echo $gcc_version | cut -d. -f1`
      minor=`echo $gcc_version | sed "s/@<:@-,a-z,A-Z@:>@.*//" | cut -d. -f2`
      if test -z "$major" || test -z "$minor"; then
        use_pch=no
      elif test "$major" -ge 4; then
        use_pch=yes
      else
        use_pch=no
      fi
    else
      use_pch=no
    fi
  else
    use_pch=no
  fi
fi
if test "x$use_pch" = "xyes"; then
  AC_MSG_RESULT([yes])
else
  AC_MSG_RESULT([no])
fi
AM_CONDITIONAL(ENABLE_PCH,test "x$use_pch" = "xyes")


AC_OUTPUT(Makefile \
	  data/Makefile \
	  data/maps/Makefile \
	  data/maps/Sauerbraten/254/Makefile \
	  data/maps/Sauerbraten/256/Makefile \
	  data/maps/Sauerbraten/Makefile \
	  po/Makefile.in \
	  src/Makefile \
	  src/engine/Makefile \
	  src/engine/tools/Makefile \
	  src/pch/Makefile \
	  src/plugin/Makefile \
	  src/plugins/Makefile \
	  src/tools/Makefile \
	  PLUGINS_MAKEFILES)

echo
echo -e "--------------------------------------------------"
echo -e "$PACKAGE $VERSION"

echo
echo -e "Install prefix................. : $prefix"
echo
echo -e "wxWidgets version.............. : $wxversion ($wxtype)"
echo -e "Build using precompiled headers : $use_pch"
echo
echo -e "Speech-dispatcher support...... : $use_speechd"
echo -e "Use internal libGeoIP.......... : $use_internal_geoip"
echo -e "Install package GeoIP database. : $use_internal_geoip_db"
echo
echo -e "Enabled plugins................ : PLUGINS_ENABLED"
echo
echo -e "Build map config tool.......... : $cslmapcfgtool"
echo -e "--------------------------------------------------"
echo
