diff -uwpr wxGlade_orig/codegen/cpp_codegen.py wxGlade/codegen/cpp_codegen.py
--- wxGlade_orig/codegen/cpp_codegen.py	2013-02-27 16:14:05.718717800 +0100
+++ wxGlade/codegen/cpp_codegen.py	2012-01-08 16:42:42.000000000 +0100
@@ -771,9 +771,9 @@ def add_class(code_obj):
         if custom_base is not None:
             base = ", public ".join([b.strip() for b in custom_base.split(',')])
         hwrite('\nclass %s: public %s {\n' % (code_obj.klass, base))
-        hwrite(tabs(1) + 'public:\n')
+        hwrite('public:\n')
         # the first thing to add it the enum of the various ids
-        hwrite(tabs(2) + '// begin wxGlade: %s::ids\n' % code_obj.klass)
+        hwrite(tabs(1) + '// begin wxGlade: %s::ids\n' % code_obj.klass)
         ids = classes[code_obj.klass].ids
 
         # let's try to see if there are extra ids to add to the enum
@@ -781,32 +781,32 @@ def add_class(code_obj):
             ids.extend(builder.get_ids_code(code_obj))
         
         if ids:
-            hwrite(tabs(2) + 'enum {\n')
-            ids = (',\n' + tabs(3)).join(ids)
-            hwrite(tabs(3) + ids)
-            hwrite('\n' + tabs(2) + '};\n')
-        hwrite(tabs(2) + '// end wxGlade\n\n')
+            hwrite(tabs(1) + 'enum {\n')
+            ids = (',\n' + tabs(2)).join(ids)
+            hwrite(tabs(2) + ids)
+            hwrite('\n' + tabs(1) + '};\n')
+        hwrite(tabs(1) + '// end wxGlade\n\n')
         # constructor prototype
-        hwrite(tabs(2) + '%s(%s);\n\n' % (code_obj.klass, sign_decl1))
-        hwrite(tabs(1) + 'private:\n')
+        hwrite(tabs(1) + '%s(%s);\n' % (code_obj.klass, sign_decl1))
+        hwrite('\nprivate:\n')
         # set_properties and do_layout prototypes
-        hwrite(tabs(2) + '// begin wxGlade: %s::methods\n' % code_obj.klass)
-        hwrite(tabs(2) + 'void set_properties();\n')
-        hwrite(tabs(2) + 'void do_layout();\n')
-        hwrite(tabs(2) + '// end wxGlade\n')
+        hwrite(tabs(1) + '// begin wxGlade: %s::methods\n' % code_obj.klass)
+        hwrite(tabs(1) + 'void set_properties();\n')
+        hwrite(tabs(1) + 'void do_layout();\n')
+        hwrite(tabs(1) + '// end wxGlade\n')
         # declarations of the attributes
         hwrite('\n')
-        hwrite(tabs(1) + 'protected:\n')
-        hwrite(tabs(2) + '// begin wxGlade: %s::attributes\n' % code_obj.klass)
+        hwrite('protected:\n')
+        hwrite(tabs(1) + '// begin wxGlade: %s::attributes\n' % code_obj.klass)
         for o_type, o_name in classes[code_obj.klass].sub_objs:
-            hwrite(tabs(2) + '%s* %s;\n' % (o_type, o_name))
-        hwrite(tabs(2) + '// end wxGlade\n')
+            hwrite(tabs(1) + '%s* %s;\n' % (o_type, o_name))
+        hwrite(tabs(1) + '// end wxGlade\n')
 
         # ALB 2004-12-08 event handling
         if event_handlers:
-            t = tabs(2)
+            t = tabs(1)
             hwrite('\n' + t + 'DECLARE_EVENT_TABLE();\n')
-            hwrite('\n' + tabs(1) + 'public:\n')
+            hwrite('\npublic:\n')
             already_there = {}
             for tpl in event_handlers:
                 if len(tpl) == 4:
@@ -826,7 +826,7 @@ def add_class(code_obj):
         hwrite('}; // wxGlade: end class\n\n')
         
     elif prev_src is not None:
-        hwrite(tabs(2) + '// begin wxGlade: %s::ids\n' % code_obj.klass)
+        hwrite(tabs(1) + '// begin wxGlade: %s::ids\n' % code_obj.klass)
         ids = classes[code_obj.klass].ids
 
         # let's try to see if there are extra ids to add to the enum
@@ -834,11 +834,11 @@ def add_class(code_obj):
             ids.extend(builder.get_ids_code(code_obj))
 
         if ids:
-            hwrite(tabs(2) + 'enum {\n')
-            ids = (',\n' + tabs(3)).join(ids)
-            hwrite(tabs(3) + ids)
-            hwrite('\n' + tabs(2) + '};\n')
-        hwrite(tabs(2) + '// end wxGlade\n')
+            hwrite(tabs(1) + 'enum {\n')
+            ids = (',\n' + tabs(2)).join(ids)
+            hwrite(tabs(2) + ids)
+            hwrite('\n' + tabs(1) + '};\n')
+        hwrite(tabs(1) + '// end wxGlade\n')
         tag = '<%swxGlade replace %s ids>' % (nonce, code_obj.klass)
         if prev_src.header_content.find(tag) < 0:
             # no ids tag found, issue a warning and do nothing
@@ -848,11 +848,11 @@ def add_class(code_obj):
         else:
             prev_src.header_content = prev_src.header_content.\
                                       replace(tag, "".join(header_buffer))
-        header_buffer = [ tabs(2) + '// begin wxGlade: %s::methods\n' % \
+        header_buffer = [ tabs(1) + '// begin wxGlade: %s::methods\n' % \
                           code_obj.klass,
-                          tabs(2) + 'void set_properties();\n',
-                          tabs(2) + 'void do_layout();\n',
-                          tabs(2) + '// end wxGlade\n' ]
+                          tabs(1) + 'void set_properties();\n',
+                          tabs(1) + 'void do_layout();\n',
+                          tabs(1) + '// end wxGlade\n' ]
         tag = '<%swxGlade replace %s methods>' % (nonce, code_obj.klass)
         if prev_src.header_content.find(tag) < 0:
             # no methods tag found, issue a warning and do nothing
@@ -865,10 +865,10 @@ def add_class(code_obj):
                                       replace(tag, "".join(header_buffer))
         header_buffer = []
         hwrite = header_buffer.append
-        hwrite(tabs(2) + '// begin wxGlade: %s::attributes\n' % code_obj.klass)
+        hwrite(tabs(1) + '// begin wxGlade: %s::attributes\n' % code_obj.klass)
         for o_type, o_name in classes[code_obj.klass].sub_objs:
-            hwrite(tabs(2) + '%s* %s;\n' % (o_type, o_name))
-        hwrite(tabs(2) + '// end wxGlade\n')
+            hwrite(tabs(1) + '%s* %s;\n' % (o_type, o_name))
+        hwrite(tabs(1) + '// end wxGlade\n')
         tag = '<%swxGlade replace %s attributes>' % (nonce, code_obj.klass)
         if prev_src.header_content.find(tag) < 0:
             # no attributes tag found, issue a warning and do nothing
@@ -885,7 +885,7 @@ def add_class(code_obj):
         # ALB 2004-12-08 event handling
         if event_handlers:
             already_there = prev_src.event_handlers.get(code_obj.klass, {})
-            t = tabs(2)
+            t = tabs(1)
             for tpl in event_handlers:
                 if len(tpl) == 4:
                     win_id, event, handler, evt_type = tpl
@@ -900,8 +900,8 @@ def add_class(code_obj):
                            '<event_handler>\n' % (handler, evt_type))
                     already_there[handler] = 1
             if code_obj.klass not in prev_src.event_table_def:
-                hwrite('\n' + tabs(1) + 'protected:\n')
-                hwrite(tabs(2) + 'DECLARE_EVENT_TABLE()\n')
+                hwrite('\nprotected:\n')
+                hwrite(tabs(1) + 'DECLARE_EVENT_TABLE()\n')
         tag = '<%swxGlade event_handlers %s>' % (nonce, code_obj.klass)
         if prev_src.header_content.find(tag) < 0:
             # no attributes tag found, issue a warning and do nothing
